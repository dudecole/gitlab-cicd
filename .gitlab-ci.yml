stages: 
  - staging
  - staging-admin    
  - production

.deploy-base:
  rules:
    - when: manual 
  image: quay.io/dcole/controller-configuration:dev #<--could eventually create stage/tags and use $ENV instead of 'dev'
  script:
    - ansible-playbook -i localhost, controller-configuration.yml -e "env='$ENV' controller_username=$CONTROLLER_USERNAME controller_password=$CONTROLLER_PASSWORD controller_hostname=$CONTROLLER_URL controller_validate_certs=false" -vvv

staging-job:      # This job runs in staging environment.
  stage: staging  
  environment: 
    name: controller1 #<-these should probably be vars in gitlab -> $ENV or something else
    url: http://192.168.59.10 #<-these should probably be vars in gitlab -> $CONTROLLER_URL
  variables:
    ENV: "staging"
    CONTROLLER_URL: $CONTROLLER_URL_STAGING
    CONTROLLER_PASSWORD: $CONTROLLER_PASSWORD_STAGING
    CONTROLLER_USERNAME: $CONTROLLER_USERNAME_STAGING
  extends: .deploy-base

staging-admin-job:      # This job runs in the staging-admin environment.
  stage: staging-admin  
  environment: 
    name: controller2 #<-these should probably be vars in gitlab -> $ENV or something else
    url: http://192.168.69.10 #<-these should probably be vars in gitlab -> $CONTROLLER_URL
  variables:
    ENV: "staging-admin"
  extends: .deploy-base

production-job:      # This job runs in the production stage.
  stage: production  
  environment: 
    name: controller3 #<-these should probably be vars in gitlab -> $ENV or something else
    url: http://192.168.79.10 #<-these should probably be vars in gitlab -> $CONTROLLER_URL
  variables:
    ENV: "production"
  extends: .deploy-base
